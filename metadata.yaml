# Copyright 2023 Canonical Ltd
# This file populates the Overview on Charmhub.
# See https://juju.is/docs/sdk/metadata-reference for a checklist and guidance.

# The charm package name, no spaces (required)
# See https://juju.is/docs/sdk/naming#heading--naming-charms for guidance.
name: juju-jimm-k8s

# The following metadata are human-readable and will be published prominently on Charmhub.

# (Recommended)
display-name: JIMM-K8s

# (Required)
summary: JIMM (Juju Intelligent Model Manager) provides enterprise functionality for your Juju controllers

maintainers:
  - JAAS Crew (jaas-crew@lists.canonical.com)
website: https://github.com/canonical/jimm
source: https://github.com/canonical/jimm
issues: https://github.com/canonical/jimm/issues

description: |
  JIMM is a special type of Juju controller, used in conjunction with the Juju dashboard and a suite 
  of other services to provide greater capabilities to Juju. JIMM acts as an authorization gateway 
  and central access point for your Juju controllers.
  
  Some of the features that JIMM enables include:
   - A seamless way to manage models on various controllers, 
   - Fine grained access control
   - Federated login via OIDC.

  JIMM is just one component in a suite of tools that enables these features. When deployed as a whole
  we refer to this setup as JAAS (Juju As A Service).

  Visit the JAAS docs at https://canonical-jaas-documentation.readthedocs-hosted.com/en/latest/

peers:
  peer:
    interface: jimm-peer

provides:
  dashboard:
    interface: juju-dashboard
  grafana-dashboard:
    interface: grafana_dashboard
  metrics-endpoint:
    interface: prometheus_scrape

requires:
  ingress:
    interface: ingress
    limit: 1
  ingress-ssh:
    interface: ingress_per_unit
    limit: 1
  nginx-route:
    interface: nginx-route
  database:
    interface: postgresql_client
    limit: 1
  openfga:
    interface: openfga
    limit: 1
  certificates:
    interface: tls-certificates
    limit: 1
    optional: true
  vault:
    interface: vault-kv
    optional: true
    limit: 1
  oauth:
    interface: oauth
    limit: 1
  receive-ca-cert:
    interface: certificate_transfer
    description: |
      Receive a CA cert for jimm to trust.
      This relation can be used with a local CA to obtain the CA cert that was used to sign proxied
      endpoints.
    limit: 1
    optional: true
  logging:
    interface: loki_push_api
    optional: true

containers:
  jimm:
    resource: jimm-image

resources:
  jimm-image:
    type: oci-image
    description: OCI image for JIMM.
    # Update the below to a fixed version of JIMM once a stable release with OIDC is out.
    upstream-source: ghcr.io/canonical/jimm:v3.2.7

